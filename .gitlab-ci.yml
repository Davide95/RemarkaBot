image: golang:1-alpine

stages:
  - merge
  - build

check-formatting:
  stage: merge
  rules:
    - if: $CI_MERGE_REQUEST_ID
  script:
    - test -z $(gofmt -l .)

lint:
  stage: merge
  rules:
    - if: $CI_MERGE_REQUEST_ID
  before_script:
    - apk add build-base
  script:
    - echo "Linting the following packages:"
    - go list ./...
    - go vet ./...

test:
  stage: merge
  rules:
    - if: $CI_MERGE_REQUEST_ID
  before_script:
    - apk add build-base
    - go install gotest.tools/gotestsum@latest
  script:
    - gotestsum --junitfile rspec.xml --format testname -- -cover ./...
  artifacts:
    when: always
    paths:
      - rspec.xml
    reports:
      junit: rspec.xml

build:
  stage: build
  only:
    - master
  variables:
    GOOS: linux
    GOARCH: arm
    GOARM: "7"
  script:
    - go build -o ./bin/
  artifacts:
    paths:
      - bin
